-------------------------------------------------------------------------------------------------------
INSTALLATION

* Si clavier pas encore en azerty :

    sudo loadkeys fr (ne dure que le temps de la session courante)
    # ou mieux :
    sudo dpkg-reconfigure keyboard-configuration (reconfigure le clavier durablement)

* Si locale pas encore en français (fr_FR) : http://goo.gl/ktpA1 + modif dans /etc/default/locale

* Custom .bashrc :

    sudo apt-get install curl
    curl https://raw.github.com/ronanguilloux/Scripts/master/bashrc -O
    cp .bashrc .bashrc.dist
    mv bashrc .bashrc
    . .bashrc


* Si la commande 'date' ne renvoie pas l'heure de Paris : Modifier le fuseau horaire de l'heure système (=> Europe/Paris) :

    date
    sudo dpkg-reconfigure tzdata
    sudo vim /etc/environment
        +1 ligne :
            TZ="Europe/Paris"

* Accès SSH (inutile pour un serveur déjà accessible via ssh) :

    sudo apt-get install openssh-server
    sudo ufw default allow incoming

* custom ~/.bashrc de toog

    sudo apt-get update
    sudo apt-get upgrade

* Server utils & shell enhancements :

    sagi make tree rsync rar unrar zip unzip p7zip p7zip-full p7zip-rar manpages-fr manpages-fr-extra manpages-dev most lynx analog mailx
    sagi cloc tidy markdown htop sysstat di discus pydf hardinfo


* SVN:

    sagi subversion-tools subversion

* LAMP:

    sagi apache2 apache2-mpm-prefork libapache2-mod-php5 apache2-utils php5 php5-dev websvn libapache2-svn
    sagi sagi phpmyadmin mysql-server
    sagi imagemagick php5-apc php5-xdebug php5-mysql php-db php5-sqlite php5-cli php5-curl php5-suhosin php-pear php5-gd php5-imagick php5-imap php5-xsl php5-common php5-mcrypt php5-memcache php5-ps php5-pspell php5-recode php5-snmp php5-tidy php5-intl php-geshi

    sudo a2enmod rewrite
    sudo a2enmod headers
    sudo a2enmod deflate
    sudo a2enmod expires
    sudo a2enmod setenvif

    # for git vhost :
    sudo a2enmod dav
    sudo a2enmod dav_fs

* PHP custom conf:

    /etc/php5/apache2 & cli :
        date.timezone = Europe/Paris

    sudo pecl install mongo
        + add "extension=mongo.so" to php.ini (/etc/php5/apache2 & /etc/php5/cli)

        /etc/php5/apache2/conf.d/xcache.ini:
        xcache.size	128M	; mémoire réservée pour XCache
        xcache.count	2	; on donne le nombre total de processeurs [grep -c processor /proc/cpuinfo]

# Conf de suhosin pour pĥpmyadmin :
    sudo vim /etc/php5/conf.d/suhosin.ini

        # ajout des lignes suivantes :

            # Source : //phpmyadmin/Documentation.html#faq1_38
            suhosin.request.max_vars = 2048
            suhosin.post.max_vars = 2048
            suhosin.request.max_array_index_length = 256
            suhosin.post.max_array_index_length = 256
            suhosin.request.max_totalname_length = 8192
            suhosin.post.max_totalname_length = 8192
            #suhosin.sql.bailout_on_error needs to be disabled (the default)
            #suhosin.log.* should not include SQL, otherwise you get big slowdown
            # see also SuhosinDisableWarning directive : //phpmyadmin/Documentation.html#cfg_SuhosinDisableWarning

* GIT

    sagi git git-core git-doc git-email git-svn gitweb
    + mise en place du serveur avec un user git + clefs publics : http://progit.org/book/fr/ch4-4.html


* PHPUnit

    sudo pear upgrade pear
    sudo pear channel-discover pear.symfony-project.com
    sudo pear channel-discover pear.phpunit.de
    sudo pear install phpunit/PHPUnit -a

* Silex ready

   /etc/php5/apache2/php.ini & /cli/php.ini :

[Phar]
; http://php.net/phar.readonly
phar.readonly = Off

; http://php.net/phar.require-hash
phar.require_hash = Off

detect_unicode = Off
suhosin.executor.include.whitelist = phar

* APC PHP acceleration

    sagi php-apc

    # +2 lines in /etc/php5/apache2 & cli/php.ini

        apc.enabled = 1
        apc.enable_cli = 1

    # Then restart apache2

* Mongo: cf. http://www.mongodb.org/display/DOCS/Ubuntu+and+Debian+packages => version UPSTART !

* Mise en place de backup pour mongo (rétention sur 7 jours, accessible en lecture/écriture à toog) :

    sudo mkdir /var/backups/mongo
    sudo chown toog:toog /var/backups/mongo
    sudo chmod 775 /var/backups/mongo
    crontab -e (de toog)
    + 1 ligne:
        30 2 * * *	mongodump --directoryperdb -o /var/backups/mongo/`date +'%u'` > /home/toog/bin/mongobackup.cron.log

* Script Backup Mysql in /home/toog/bin/mysqlbackup.sh

    sudo mkdir /var/backups/mysql
    sudo chown toog:toog /var/backups/mysql
    sudo chmod 775 /var/backups/mysql
    # récupérer https://gist.github.com/1595563 dans /home/toog/bin/mysqlbackup.sh
    crontab -e (de toog)
    + 1 ligne:
        0 2 * * *	/home/toog/bin/mysqlbackup.sh >> /home/toog/bin/mysqlbackup.sh.log

* (Workaround pour le bug de php5-sqlite dans Oneiric : (cf. http://goo.gl/Iaks4))

    sudo mv /etc/php5/conf.d/sqlite.ini /etc/php5/conf.d/sqlite.ini.bugged

* Mettre les droits en 775 pour /var/www et ~/www  => exécutable par Apache2, modifiable par $LOGNAME

    mkdir ~/www
    sudo chmod 775 /var/www -R
    sudo chmod 775 ~/www -R
    sudo chown $LOGNAME:www-data /var/www -R
    sudo chown $LOGNAME:www-data ~/www -R

* Récupérer la liste des modules chargés :

apache2ctl -t -D DUMP_MODULES

